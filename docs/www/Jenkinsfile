#!/usr/bin/env groovy
/*
 * Copyright (c) 2016 NumberFour AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *   NumberFour AG - Initial API and implementation
 */

// email configuration
def mailSender = 'robot@numberfour.eu'
def String recipient = 'brian.smith@numberfour.eu'
def String replyTo = 'brian.smith@numberfour.eu'
def String team = 'brian.smith@numberfour.eu, staff-devtools@numberfour.eu'
// TODO check node workspace URL
def String buildhtml = env.BUILD_URL+"execution/node/5/ws/sourceX/docs/www/web-html"

import org.codehaus.groovy.runtime.DefaultGroovyMethods

try {

	timestamps {

	node ("docker-spec") {
		currentBuild.result = "SUCCESS"

		def workspace = pwd()
		def sourceX = "sourceX"

		sh "pwd; ls -la"

		stage('Cleanup') {
			dir( sourceX ) {
			    deleteDir()
			}
		}

		def sourceBranch = env.BRANCH

		def htmlDir="$WORKSPACE/${sourceX}/docs/www/web-html"
		def specDir="$WORKSPACE/${sourceX}/docs/org.eclipse.n4js.spec"

		dir( sourceX ) {

			stage('Source Checkout') {
				// Change following repository to eclipse/n4js
				sh "git clone --depth 1 -b $sourceBranch https://github.com/bsmith-n4/n4js.git ."
			}
			
			stage ('Generate commit info') {
				// Comitter name
				sh "git log --format=%cN -1 . >docs/www/shortcommit.txt"
				// Abbreviated Hash
				sh "git log --format=%h -1 . >>docs/www/shortcommit.txt"
			}

			stage ('Build Eclipse Web Pages') {

				dir ('docs/www') {
					sh "${workspace}/${sourceX}/docs/www/buildweb.sh --docker"
				}
				echo "\u2705 Build successful."
			}

			stage ('Build N4JS Specification') {
				sh "cp -r $WORKSPACE/${sourceX}/docs/www/assets/. $specDir/"
				sh "docker run --rm --user `id -u`:`id -g` -t -e DOC_NAME=N4JSSpec -v \$(pwd)/docs/org.eclipse.n4js.spec:/workspace:rw docker.corp.numberfour.eu/numberfour/asciispec:0.0.10 -a"
				echo "\u2705 Build successful."
			}	
		}


		stage ('Publish/Aggregation Step') {

			sh "cp -r $specDir/generated-docs/. $WORKSPACE/${sourceX}/docs/www/web-html/spec"


			// A test repo, this should be changed to one of the protocols listed below
			def targetRepo = "https://github.numberfour.eu/bsmith/eclipse-www.git"

			// change 'targetRepo' to one of these:
			// git://git.eclipse.org/gitroot/gerrit/www.eclipse.org/n4js.git
			// ssh://git.eclipse.org/gitroot/gerrit/www.eclipse.org/n4js.git
			// http://git.eclipse.org/gitroot/gerrit/www.eclipse.org/n4js.git
						
			// should be master for publishing
			def targetBranch = "testbranch"
			
			// TODO change 'GH-103' feature branch to master before merging
 			if("$sourceBranch" == "GH-103" ) {

				sh "rm -rf htmldir"
				sh "mkdir htmldir"

				dir ("htmldir") {
					sh "git clone --depth 1 -b $targetBranch $targetRepo ."

					// Cannot remove everything in destination repo because of Handwritten HTML files.
				 	// sh "rm -rf *"

				 	sh "cp -r ${workspace}/${sourceX}/docs/www/web-html/. ."

					sh "git add --all ."

					// Some credentials needed here: see stage ('Generate commit info')
					sh "git commit -m 'Pipeline published from ${sourceBranch} commit ---' "
					sh "git status"
					// Or change the following to open a PR
					sh "git push --set-upstream origin $targetBranch"
				}

				mail to: 		recipient,
					 from: 		mailSender,
					 replyTo: 	replyTo,
					 subject: 	"Eclipse N4JS Website build successful",
					 body: 		"Documentation published to https://eclipse.org/n4js"+
						  		"\nTriggered by commit: https://github.com/bsmith-n4/n4js/commit/---"

				echo "\u2705 Published Webpages."

			} else {
				echo "On branch $sourceBranch - publishing step skipped. HTML can be viewed in Job ${env.BUILD_NUMBER} workspace: $buildhtml"
			}
			echo "\u2705 Aggregation finished."
		}
	}} // close try & timestamp
}

catch (exc) {
	currentBuild.result = "FAILURE"
	echo "Caught: ${exc}"
	echo "[ERROR]\u274C $sourceBranch failing. Sending email notification."

	if ($sourceBranch == 'master' )
	{

		mail to: 		recipient, // Consider adding team to list here
			from: 		mailSender,
			replyTo: 	replyTo,
			subject: 	"Eclipse-www Master (${env.BUILD_NUMBER}) is failing.",
			body: 		"Build URL - ${env.BUILD_URL}.\nJob: ${env.JOB_NAME}\nThe following exception was caught:\n${exc}"
	} else {
		mail to: 		recipient,
			from: 		mailSender,
			replyTo: 	replyTo,
			subject: 	"Eclipse-www (${env.BUILD_NUMBER}) failed.",
			body: 		"Build URL - ${env.BUILD_URL}.\nJob: ${env.JOB_NAME}\nThe following exception was caught:\n${exc}"
	}
}

// vim: ft=groovy
